from flask import render_template
from flask.ext.appbuilder.models.sqla.interface import SQLAInterface
from flask.ext.appbuilder.charts.views import DirectByChartView, GroupByChartView
from flask.ext.appbuilder import ModelView
from models import Team, Ratings
from app import appbuilder, db
from flask.ext.appbuilder.models.group import aggregate_count, aggregate_sum, aggregate_avg
from flask_appbuilder.models.sqla.filters import FilterStartsWith, FilterEqualFunction, FilterEqual, FilterSmaller
#from flask import g 
"""
    Create your Views::


    class MyModelView(ModelView):
        datamodel = SQLAInterface(MyModel)


    Next, register your Views::


    appbuilder.add_view(MyModelView, "My View", icon="fa-folder-open-o", category="My Category", category_icon='fa-envelope')
"""

"""
    Application wide 404 error handler
"""

class MidfieldListSerieA(ModelView):
    datamodel = SQLAInterface(Ratings)
    list_columns = ['team.team_name', 'team.series_name','midfield_rating', 'match_id']
    base_filters = [['team.series_name', FilterStartsWith, 'S']]
    base_permissions = ['can_list','can_show']

class MidfieldListII(ModelView):
    datamodel = SQLAInterface(Ratings)
    list_columns = ['team.team_name', 'team.series_name','midfield_rating', 'match_id']
    base_filters = [['team.series_name', FilterStartsWith, 'II.']]	
    base_permissions = ['can_list','can_show']

class MidfieldListIII(ModelView):
    datamodel = SQLAInterface(Ratings)
    list_columns = ['team.team_name', 'team.series_name','midfield_rating', 'match_id']
    base_filters = [['team.series_name', FilterStartsWith, 'III.']]
    base_permissions = ['can_list','can_show']
	
class MidfieldListIV(ModelView):
    datamodel = SQLAInterface(Ratings)
    list_columns = ['team.team_name', 'team.series_name','midfield_rating', 'match_id']
    base_filters = [['team.series_name', FilterStartsWith, 'IV.']]
    base_permissions = ['can_list','can_show']	

class DefenceListSerieA(ModelView):
    datamodel = SQLAInterface(Ratings)
    list_columns = ['team.team_name', 'team.series_name','defence_rating', 'match_id']
    base_filters = [['team.series_name', FilterStartsWith, 'S']]
    base_permissions = ['can_list','can_show']

class DefenceListII(ModelView):
    datamodel = SQLAInterface(Ratings)
    list_columns = ['team.team_name', 'team.series_name','defence_rating', 'match_id']
    base_filters = [['team.series_name', FilterStartsWith, 'II.']]
    base_permissions = ['can_list','can_show']

class DefenceListIII(ModelView):
    datamodel = SQLAInterface(Ratings)
    list_columns = ['team.team_name', 'team.series_name','defence_rating', 'match_id']
    base_filters = [['team.series_name', FilterStartsWith, 'III.']]
    base_permissions = ['can_list','can_show']

class DefenceListIV(ModelView):
    datamodel = SQLAInterface(Ratings)
    list_columns = ['team.team_name', 'team.series_name','defence_rating', 'match_id']
    base_filters = [['team.series_name', FilterStartsWith, 'IV.']]
    base_permissions = ['can_list','can_show']

class AttackListSerieA(ModelView):
    datamodel = SQLAInterface(Ratings)
    list_columns = ['team.team_name', 'team.series_name','attack_rating', 'match_id']
    base_filters = [['team.series_name', FilterStartsWith, 'S']]
    base_permissions = ['can_list','can_show']

class AttackListII(ModelView):
    datamodel = SQLAInterface(Ratings)
    list_columns = ['team.team_name', 'team.series_name','attack_rating', 'match_id']
    base_filters = [['team.series_name', FilterStartsWith, 'II.']]
    base_permissions = ['can_list','can_show']

class AttackListIII(ModelView):
    datamodel = SQLAInterface(Ratings)
    list_columns = ['team.team_name', 'team.series_name','attack_rating', 'match_id']
    base_filters = [['team.series_name', FilterStartsWith, 'III.']]
    base_permissions = ['can_list','can_show']

class AttackListIV(ModelView):
    datamodel = SQLAInterface(Ratings)
    list_columns = ['team.team_name', 'team.series_name','attack_rating', 'match_id']
    base_filters = [['team.series_name', FilterStartsWith, 'IV.']]
    base_permissions = ['can_list','can_show']


'''	
class DefenceModelView(ModelView):
    datamodel = SQLAInterface(Defence)
    list_columns = ['team.team_name', 'defence_rating', 'match_id']

class AttackModelView(ModelView):
    datamodel = SQLAInterface(Attack)
    list_columns = ['team.team_name', 'attack_rating', 'match_id']
'''

class TeamsModelView(ModelView):
    datamodel = SQLAInterface(Team)
    list_columns = ['team_id', 'team_name', 'series_name']
    related_views = [MidfieldListSerieA]




@appbuilder.app.errorhandler(404)
def page_not_found(e):
    return render_template('404.html', base_template=appbuilder.base_template, appbuilder=appbuilder), 404



class RatingsChartView(GroupByChartView):
    datamodel = SQLAInterface(Ratings)
    chart_title = 'Ratings Example'
    chart_type = 'Histogram'
    #base_filters = [['team.series_name', FilterStartsWith, 'Serie']]

    
    definitions = [
        {
            'label': 'Defence/Attack',
            'group': 'team.series_name',
            'series': [(aggregate_avg,'defence_rating'),
                       (aggregate_avg,'attack_rating')]
        },
		{
            'label': 'Midfield',
            'group': 'team.series_name',
            'series': [(aggregate_avg,'midfield_rating')]
        }
        ]

    
appbuilder.add_view(TeamsModelView, "List Teams", icon="fa-folder-open-o", category="Statistics")

appbuilder.add_view(MidfieldListSerieA, "List Teams Midfield Serie A", icon="fa-folder-open-o", category="Midfield Stats")
appbuilder.add_view(MidfieldListII, "List Teams Midfield II", icon="fa-folder-open-o", category="Midfield Stats")
appbuilder.add_view(MidfieldListIII, "List Teams Midfield III", icon="fa-folder-open-o", category="Midfield Stats")
appbuilder.add_view(MidfieldListIV, "List Teams Midfield IV", icon="fa-folder-open-o", category="Midfield Stats")

appbuilder.add_view(DefenceListSerieA, "List Teams Serie A", icon="fa-folder-open-o", category="Defence Stats")
appbuilder.add_view(DefenceListII, "List Teams II", icon="fa-folder-open-o", category="Defence Stats")
appbuilder.add_view(DefenceListIII, "List Teams III", icon="fa-folder-open-o", category="Defence Stats")
appbuilder.add_view(DefenceListIV, "List Teams IV", icon="fa-folder-open-o", category="Defence Stats")

appbuilder.add_view(AttackListSerieA, "List Teams Serie A", icon="fa-folder-open-o", category="Attack Stats")
appbuilder.add_view(AttackListII, "List Teams II", icon="fa-folder-open-o", category="Attack Stats")
appbuilder.add_view(AttackListIII, "List Teams III", icon="fa-folder-open-o", category="Attack Stats")
appbuilder.add_view(AttackListIV, "List Teams IV", icon="fa-folder-open-o", category="Attack Stats")

#appbuilder.add_view(MidfieldListSerieA, "List Teams Midfield", icon="fa-folder-open-o", category="Midfield Stats")
#appbuilder.add_view(DefenceModelView, "List Teams Defence", icon="fa-folder-open-o", category="Defence Stats")
#appbuilder.add_view(AttackModelView, "List Teams Attack", icon="fa-folder-open-o", category="Attack Stats")
appbuilder.add_view(RatingsChartView, "Rating Charts", icon="fa-dashboard", category="Rating Stats")


